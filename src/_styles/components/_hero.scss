@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as m;
@use "sass:map";

.hero__wrapper {
  height: 100vh;
  background-color: map.get(v.$colors, sand);
  display: flex;
  flex-direction: column;

  @include m.respond(lg) {
    flex-direction: row;
  }
}

// LEFT SIDE
.hero__left {
  flex: 0.7;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  @include m.respond(lg) {
    flex: 1;
  }

  &-text {
    text-align: center;

    h1,
    p {
      color: map.get(v.$colors, moss);
    }

    h1 {
      font-size: clamp(2rem, 5vw, 7rem);
      letter-spacing: 0.5rem;
    }

    p {
      display: inline;
      border-bottom: 1px solid map.get(v.$colors, moss);
      margin-top: 2rem;
    }
  }

  &-button {
    margin-top: 2rem;

    @include m.respond(lg) {
      margin-left: 3rem;
      align-self: flex-start;
      position: absolute;
      bottom: 5rem;
    }
  }
}

.tilted-button-wrapper::after {
  display: flex;
  justify-content: center;
  transform: skew(-10deg);
}

.icon-arrow {
  display: inline;
}

.tilted-button {
  text-transform: uppercase;
  padding: 0.8rem 2rem 0.7rem 2rem;
  color: map.get(v.$colors, moss);
  border: 1px solid map.get(v.$colors, moss);
  border-radius: 0.7rem;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.3s ease;
  transform: skew(10deg);

  &:hover {
    background-color: map.get(v.$colors, moss);
    color: map.get(v.$colors, sand);

    &:before {
      transform: translateX(0);
    }
  }
}

// RIGHT SIDE
.hero__right {
  position: relative;
  flex: 1;
  background-image: url(/hero.jpeg);
  background-position: top;
  background-size: cover;
  background-repeat: no-repeat;
  overflow: hidden;

  @include m.respond(lg) {
    overflow: auto;
  }
}
